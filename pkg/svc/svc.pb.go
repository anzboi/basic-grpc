// Code generated by protoc-gen-go. DO NOT EDIT.
// source: svc.proto

package svc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GreetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetRequest) Reset()         { *m = GreetRequest{} }
func (m *GreetRequest) String() string { return proto.CompactTextString(m) }
func (*GreetRequest) ProtoMessage()    {}
func (*GreetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5747b2e02f0c537, []int{0}
}

func (m *GreetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetRequest.Unmarshal(m, b)
}
func (m *GreetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetRequest.Marshal(b, m, deterministic)
}
func (m *GreetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetRequest.Merge(m, src)
}
func (m *GreetRequest) XXX_Size() int {
	return xxx_messageInfo_GreetRequest.Size(m)
}
func (m *GreetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetRequest proto.InternalMessageInfo

func (m *GreetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GreetResponse struct {
	Greeting             string   `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetResponse) Reset()         { *m = GreetResponse{} }
func (m *GreetResponse) String() string { return proto.CompactTextString(m) }
func (*GreetResponse) ProtoMessage()    {}
func (*GreetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5747b2e02f0c537, []int{1}
}

func (m *GreetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetResponse.Unmarshal(m, b)
}
func (m *GreetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetResponse.Marshal(b, m, deterministic)
}
func (m *GreetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetResponse.Merge(m, src)
}
func (m *GreetResponse) XXX_Size() int {
	return xxx_messageInfo_GreetResponse.Size(m)
}
func (m *GreetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GreetResponse proto.InternalMessageInfo

func (m *GreetResponse) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

type Message struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5747b2e02f0c537, []int{2}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MessageResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageResponse) Reset()         { *m = MessageResponse{} }
func (m *MessageResponse) String() string { return proto.CompactTextString(m) }
func (*MessageResponse) ProtoMessage()    {}
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5747b2e02f0c537, []int{3}
}

func (m *MessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageResponse.Unmarshal(m, b)
}
func (m *MessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageResponse.Marshal(b, m, deterministic)
}
func (m *MessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageResponse.Merge(m, src)
}
func (m *MessageResponse) XXX_Size() int {
	return xxx_messageInfo_MessageResponse.Size(m)
}
func (m *MessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageResponse proto.InternalMessageInfo

func (m *MessageResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type EchoRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5747b2e02f0c537, []int{4}
}

func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (m *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(m, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type EchoResponse struct {
	Echo                 string   `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5747b2e02f0c537, []int{5}
}

func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (m *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(m, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

func (m *EchoResponse) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func init() {
	proto.RegisterType((*GreetRequest)(nil), "svc.GreetRequest")
	proto.RegisterType((*GreetResponse)(nil), "svc.GreetResponse")
	proto.RegisterType((*Message)(nil), "svc.Message")
	proto.RegisterType((*MessageResponse)(nil), "svc.MessageResponse")
	proto.RegisterType((*EchoRequest)(nil), "svc.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "svc.EchoResponse")
}

func init() { proto.RegisterFile("svc.proto", fileDescriptor_e5747b2e02f0c537) }

var fileDescriptor_e5747b2e02f0c537 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0xb1, 0x48, 0x09, 0x3d, 0x82, 0xa0, 0x27, 0x86, 0xca, 0x13, 0x32, 0x03, 0x95, 0x10,
	0xc5, 0x82, 0x7f, 0x00, 0x42, 0x4c, 0x2c, 0x65, 0x63, 0x0b, 0xd6, 0x29, 0xe9, 0xd0, 0xb8, 0xd8,
	0x26, 0x3f, 0x87, 0xdf, 0x8a, 0xec, 0x9c, 0xc1, 0x0b, 0xdb, 0x7b, 0x97, 0x2f, 0x4f, 0xf7, 0x7c,
	0x30, 0xf7, 0xa3, 0x59, 0xef, 0x9d, 0x0d, 0x16, 0x0f, 0xfd, 0x68, 0x94, 0x82, 0xe6, 0xc5, 0x11,
	0x85, 0x0d, 0x7d, 0x7e, 0x91, 0x0f, 0x88, 0x50, 0x0d, 0xed, 0x8e, 0x96, 0xe2, 0x52, 0xac, 0xe6,
	0x9b, 0xa4, 0xd5, 0x0d, 0x9c, 0x32, 0xe3, 0xf7, 0x76, 0xf0, 0x84, 0x12, 0x8e, 0xbb, 0x38, 0xd8,
	0x0e, 0x1d, 0x83, 0xbf, 0x5e, 0x5d, 0x41, 0xfd, 0x4a, 0xde, 0xb7, 0x1d, 0xe1, 0x12, 0xea, 0xdd,
	0x24, 0x99, 0xca, 0x56, 0xdd, 0xc2, 0x19, 0x43, 0x65, 0xa6, 0x63, 0x9d, 0x33, 0xb3, 0x57, 0xd7,
	0x70, 0xf2, 0x6c, 0x7a, 0x9b, 0x77, 0xfc, 0x3f, 0x57, 0x41, 0x33, 0x81, 0x1c, 0x8a, 0x50, 0x91,
	0xe9, 0x6d, 0x6e, 0x13, 0xf5, 0xfd, 0xb7, 0x80, 0xfa, 0x8d, 0xdc, 0xb8, 0x35, 0x84, 0x1a, 0x66,
	0xa9, 0x19, 0x2e, 0xd6, 0xf1, 0x5d, 0xca, 0x97, 0x90, 0x58, 0x8e, 0x78, 0x91, 0x03, 0xd4, 0x50,
	0x3d, 0xf5, 0x6d, 0xc0, 0x26, 0x7d, 0xe5, 0x12, 0xf2, 0xa2, 0x74, 0x7f, 0xf4, 0x4a, 0x68, 0x81,
	0x77, 0x50, 0xc5, 0x9d, 0xf0, 0x3c, 0x31, 0x45, 0x0f, 0xb9, 0x28, 0x26, 0xf9, 0x17, 0x2d, 0x1e,
	0x67, 0xef, 0xf1, 0x32, 0x1f, 0x47, 0xe9, 0x4a, 0x0f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x78,
	0xe1, 0xf0, 0x36, 0xb2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetResponse, error)
	Chat(ctx context.Context, opts ...grpc.CallOption) (Service_ChatClient, error)
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (Service_EchoClient, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetResponse, error) {
	out := new(GreetResponse)
	err := c.cc.Invoke(ctx, "/svc.Service/Greet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Chat(ctx context.Context, opts ...grpc.CallOption) (Service_ChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Service_serviceDesc.Streams[0], "/svc.Service/Chat", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceChatClient{stream}
	return x, nil
}

type Service_ChatClient interface {
	Send(*Message) error
	Recv() (*MessageResponse, error)
	grpc.ClientStream
}

type serviceChatClient struct {
	grpc.ClientStream
}

func (x *serviceChatClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *serviceChatClient) Recv() (*MessageResponse, error) {
	m := new(MessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *serviceClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (Service_EchoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Service_serviceDesc.Streams[1], "/svc.Service/Echo", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceEchoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Service_EchoClient interface {
	Recv() (*EchoResponse, error)
	grpc.ClientStream
}

type serviceEchoClient struct {
	grpc.ClientStream
}

func (x *serviceEchoClient) Recv() (*EchoResponse, error) {
	m := new(EchoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	Greet(context.Context, *GreetRequest) (*GreetResponse, error)
	Chat(Service_ChatServer) error
	Echo(*EchoRequest, Service_EchoServer) error
}

// UnimplementedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServer struct {
}

func (*UnimplementedServiceServer) Greet(ctx context.Context, req *GreetRequest) (*GreetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Greet not implemented")
}
func (*UnimplementedServiceServer) Chat(srv Service_ChatServer) error {
	return status.Errorf(codes.Unimplemented, "method Chat not implemented")
}
func (*UnimplementedServiceServer) Echo(req *EchoRequest, srv Service_EchoServer) error {
	return status.Errorf(codes.Unimplemented, "method Echo not implemented")
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Greet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Greet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svc.Service/Greet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Greet(ctx, req.(*GreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Chat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ServiceServer).Chat(&serviceChatServer{stream})
}

type Service_ChatServer interface {
	Send(*MessageResponse) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type serviceChatServer struct {
	grpc.ServerStream
}

func (x *serviceChatServer) Send(m *MessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *serviceChatServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Service_Echo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EchoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServiceServer).Echo(m, &serviceEchoServer{stream})
}

type Service_EchoServer interface {
	Send(*EchoResponse) error
	grpc.ServerStream
}

type serviceEchoServer struct {
	grpc.ServerStream
}

func (x *serviceEchoServer) Send(m *EchoResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "svc.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Greet",
			Handler:    _Service_Greet_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Chat",
			Handler:       _Service_Chat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Echo",
			Handler:       _Service_Echo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "svc.proto",
}
